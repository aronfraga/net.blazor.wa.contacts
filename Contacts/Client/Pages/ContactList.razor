@page "/"

@inject IContactService ContactService
@inject NavigationManager NavigationManager

<h3>Contacts</h3>

@if (contacts is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                FilterMode="FilterMode.Advanced" AllowPaging="true" PageSize="4"
                AllowSorting="true"
                Data="@contacts"
                TItem="Contact"
                ColumnWidth="200px">
        <Columns>
            <RadzenGridColumn TItem="Contact" Property="FullName" Title="Name" />
            <RadzenGridColumn TItem="Contact" Property="Phone" Title="Phone" />
            <RadzenGridColumn TItem="Contact" Property="Address" Title="Address" />
            <RadzenGridColumn TItem="Contact" Title="Edit" >
                <Template Context="data">
                    <RadzenLink Path="@($"/contactdetails/{data.Id}")" Text="Edit"></RadzenLink>
                    <RadzenLink Path="@($"/contactdelete/{data.Id}")" Text="Delete"></RadzenLink>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
}


@code {
    IEnumerable<Contact> contacts;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            contacts = await ContactService.GetAllContact();
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
}